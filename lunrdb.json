{"GuaranteedInvoice_Main":{"title":"Guaranteed Invoice by Wirecard","parents":["Payment Methods"],"label":null,"body":"","file":"GuaranteedInvoice_Main.html"},"GuaranteedInvoice":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Guaranteed Invoice by Wirecard"],"label":null,"body":"Guaranteed Invoice by Wirecard is a type of Offline Bank Transfer.","file":"GuaranteedInvoice_Main.html"},"PPv2_GuaranteedInvoice":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Guaranteed Invoice by Wirecard"],"label":null,"body":"With Guaranteed Invoice, Wirecard guarantees that merchants receive the payment amount, even if the consumer does not pay.The consumer pays by invoice upon receipt of the goods. Wirecard pays the merchant the order amount prior to settlement with the consumer. The invoicing and collection process (including dunning) is also handled by Wirecard.This payment method is available for German merchants only.Guaranteed Invoice by Wirecard is a type of Offline Bank Transfer.","file":"GuaranteedInvoice_Main.html"},"MOLPay_Main":{"title":"MOLPay","parents":["Payment Methods"],"label":null,"body":"","file":"MOLPay_Main.html"},"MOLPay":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","MOLPay"],"label":null,"body":"MOLPay is a type of Online Bank Transfer.","file":"MOLPay_Main.html"},"GeneralIntegrationOptions":{"title":"Integration Options","parents":[],"label":null,"body":"","file":"GeneralIntegrationOptions.html"},"FPX_Main":{"title":"FPX","parents":["Payment Methods"],"label":null,"body":"","file":"FPX_Main.html"},"FPX":{"title":"Wirecard Payment Page v1","parents":["Payment Methods","FPX"],"label":null,"body":"FPX is a type of Online Bank Transfer.","file":"FPX_Main.html"},"ShopSystems":{"title":"Shop Extensions","parents":["Integration Options"],"label":null,"body":"We offer you various shop extensions which you are able to use free-of-charge to add payment functionality to your online shop system. Therefore you only need to download/install our shop extension to your online shop and to configure it to your needs.Some shop systems refer to these shop extensions as \"app\", as \"add-on\" or as \"module\". However, for the purpose of better legibility, we call all of them \"shop extensions\" within this documentation.All our shop extensions require only PCI SAQ A certification for credit card payments which you may achieve very easily.You are able to test the shop extension features and functionality via pre-configured test accounts for each payment method. For going live you need your personal credentials which you receive from Wirecard after concluding a corresponding contract. Please contact our sales and support teams.All our shop extensions are developed and offered as open source on GitHub. This means you are able to use them free-of-charge, have full access to the source code and are able to do forks, raise issues or do contributions.Please have a look on our Terms of Use and Legal Notice before you use our shop extensions in your online shop.If you require another shop system not listed here or if you need additional payment methods or languages, please contact our sales and support teams.Add more payments methods with the Wirecard PHP Payment SDK or our Wirecard Payment Gateway payment methods.Want to contribute? Send us a pull-request on GitHub and we will get in touch with you.Finally, feel free to take a look at Myths regarding the usage of a shop extension in your online shop.","file":"ShopSystems.html"},"ShopSystems_TermsOfUse":{"title":"Terms of Use","parents":["Integration Options","Shop Extensions"],"label":null,"body":"","file":"ShopSystems.html"},"ShopSystems_Myths":{"title":"Common Misconceptions","parents":["Integration Options","Shop Extensions"],"label":null,"body":":: We are integrating the Wirecard Payment Gateway based on the standards of the corresponding shop system. This enables us a very tight integration of our interface to the default payment process offered by the shop system. Therefore our payment processes are integrated as intended by the shop system.+ If you, as a merchant, require different processes than offered by the shop system and our shop extension, you have the following possibilities::: or:: or:: or:: Overall seen it is always much cheaper and faster for you as merchant to start with a full-featured and functional shop extension tailored and deeply integrated into your shop system. Otherwise, if you do the integration on your own from scratch you have to deal with all the payment related details of the shop system and the integration details of the payment interfaces to Wirecard.+ Additionally, a shop extension offers the following advantages::: Even if you decide to do your own integration from scratch, please keep in mind to use our shop extension as a \"blue print\" which may help you regarding the implementation of various features, workflows and payment methods.:: Within the update of a shop extension your configuration and your already existing transactions are also available in the new version of the shop extension. If you did only small changes in your shop extension installation, you may find the differences easy via your version control system and are able to merge them to the updated shop extension. If there are larger changes regarding functionality you may consider to raise a pull-request in GitHub, so that our developers may integrate your feature to the shop system and then this feature will also be part of each new version we release.:: If there are no substantial changes in the interface of the shop system and the payment process, our shop extension will work out-of-the-box also with newer versions of the shop system, especially if there are only minor updates of the shop system itself.+ We at Wirecard are doing our best to have our shop extensions as near as possible to the releases of the shop vendors. But we are not able to guarantee that we can do an update on a daily-basis and in comparison to the market we do updates very fast and have had a proven track for many years.+ On the other hand if you do the integration on your own, you have to check and update your own integration also.:: All our shop extensions are developed strictly to the rules, frameworks and hooks of the shop system. Therefore, you are able to use our shop extensions in parallel within one shop and we do not interfere with other shop extensions you may have installed in your shop system. If there are troubles with other shop extensions disturbing the payment process, we would like to recommend you to disable these extensions or check for a newer and compatible version. If this does not solve the problem, please contact our support teams, so we can maybe find a workaround for you.:: If you want to use an older version of our shop extension, you can find and download all previously released versions directly from GitHub. Even we offer this, we strongly recommend that you update your shop system accordingly to the releases of the shop vendor, so that your online shop is up-to-date regarding features, functions and security.+ If you may have other or additional doubts, please do not hesitate to contact our sales and support teams.","file":"ShopSystems.html"},"AlipayDomestic_Main":{"title":"Alipay Domestic","parents":["Payment Methods"],"label":null,"body":"","file":"AlipayDomestic_Main.html"},"API_AlipayDomestic":{"title":"REST API","parents":["Payment Methods","Alipay Domestic"],"label":null,"body":"Alipay Domestic is a type of Wallet.","file":"AlipayDomestic_Main.html"},"epsUberweisung_Main":{"title":"eps-Überweisung","parents":["Payment Methods"],"label":null,"body":"","file":"epsUberweisung_Main.html"},"eps":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","eps-Überweisung"],"label":null,"body":"eps-Überweisung is a type of Online Bank Transfer.","file":"epsUberweisung_Main.html"},"PPv2_eps":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","eps-Überweisung"],"label":null,"body":"","file":"epsUberweisung_Main.html"},"PayByBankApp_Main":{"title":"Pay by Bank app (Zapp)","parents":["Payment Methods"],"label":null,"body":"","file":"PayByBankApp_Main.html"},"API_PaybyBankapp":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Pay by Bank app (Zapp)"],"label":null,"body":"Pay by Bank app (Zapp) is a type of Online Bank Transfer.","file":"PayByBankApp_Main.html"},"API_PBBA_Integration":{"title":"Integration Options","parents":["Payment Methods","Pay by Bank app (Zapp)"],"label":null,"body":"Pay by Bank app (PBBA) can be integrated to multiple options:","file":"PayByBankApp_Main.html"},"KlarnaV2_Main":{"title":"Klarna Payments","parents":["Payment Methods"],"label":null,"body":"","file":"KlarnaV2_Main.html"},"KlarnaV2":{"title":"REST API","parents":["Payment Methods","Klarna Payments"],"label":null,"body":"Klarna Payments offers 3 payment options:Klarna takes full credit and fraud risk and guarantees payments.","file":"KlarnaV2_Main.html"},"PPv2_Klarna":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Klarna Payments"],"label":null,"body":"Here you find all the information for integrating Klarna Payments into your Hosted and Embedded Payment Page.All WPP v2 integrations share a common process flow for creating payments.Below, we provide a sample request for the available transaction type authorization, including a field list with short descriptions.Below, we provide a field list with short descriptions.For more details on the redirect-url, see the Configuring Redirects and IPNs for WPP v2 section.For response verification examples, see the WPP v2 Security section.","file":"KlarnaV2_Main.html"},"Home":{"title":"Home","parents":[],"label":null,"body":"","file":"Home.html"},"BatchProcessingApi_Integration":{"title":"Batch Processing API","parents":["Integration Guides"],"label":null,"body":"These specifications are intended for integrators.","file":"BatchProcessingApi_Integration.html"},"BatchProcessingApi_TestCredentials":{"title":"Test Credentials","parents":["Integration Guides","Batch Processing API"],"label":null,"body":"It is possible to test batch transaction processing on the TEST environment using the credentials below. For more information, please contact Merchant Support.","file":"BatchProcessingApi_Integration.html"},"BatchProcessingApi_Workflow":{"title":"Workflow","parents":["Integration Guides","Batch Processing API"],"label":null,"body":"","file":"BatchProcessingApi_Integration.html"},"BatchProcessingApi_SFTPforBatchProcessing":{"title":"SFTP for Batch Processing","parents":["Integration Guides","Batch Processing API"],"label":null,"body":"SFTP (Secure File Transfer Protocol) is used to securely transfer files between the merchant and the Batch Processing Service.","file":"BatchProcessingApi_Integration.html"},"BatchProcessingApi_UploadDownload":{"title":"Upload/Download","parents":["Integration Guides","Batch Processing API"],"label":null,"body":"","file":"BatchProcessingApi_Integration.html"},"BatchProcessingApi_Files":{"title":"Files","parents":["Integration Guides","Batch Processing API"],"label":null,"body":"","file":"BatchProcessingApi_Integration.html"},"BatchProcessingApi_Fields":{"title":"Fields","parents":["Integration Guides","Batch Processing API"],"label":null,"body":"","file":"BatchProcessingApi_Integration.html"},"BatchProcessingApi_FieldNameMapping":{"title":"Field Name Mapping","parents":["Integration Guides","Batch Processing API"],"label":null,"body":"Sample Request and Response for Batch ProcessingSEPA and Credit CardThe following samples contain one SEPA DD recurring first Transaction, one SEPA CT, and one Credit Card transaction:","file":"BatchProcessingApi_Integration.html"},"BatchProcessingApi_PGP":{"title":"PGP Encryption","parents":["Integration Guides","Batch Processing API"],"label":null,"body":"","file":"BatchProcessingApi_Integration.html"},"WeChat_Main":{"title":"WeChat QR Pay","parents":["Payment Methods"],"label":null,"body":"","file":"WeChat_Main.html"},"API_WeChatQRPay":{"title":"REST API & Wirecard Payment Page v1/v2","parents":["Payment Methods","WeChat QR Pay"],"label":null,"body":"WeChat QR Pay is a type of Wallet.","file":"WeChat_Main.html"},"SEPADirectDebit_Rest":{"title":"SEPA Direct Debit","parents":["Payment Methods"],"label":null,"body":"","file":"SEPADirectDebit_Rest.html"},"SEPADirectDebit":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","SEPA Direct Debit"],"label":null,"body":"SEPA Direct Debit is a type of Offline Bank Transfer.","file":"SEPADirectDebit_Rest.html"},"PPv2_SEPADirectDebit":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","SEPA Direct Debit"],"label":null,"body":"","file":"SEPADirectDebit_Rest.html"},"Przelewy24_Main":{"title":"Przelewy24","parents":["Payment Methods"],"label":null,"body":"","file":"Przelewy24_Main.html"},"Przelewy24":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Przelewy24"],"label":null,"body":"Przelewy24 is a type of Online Bank Transfer.","file":"Przelewy24_Main.html"},"PPv2_P24":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Przelewy24"],"label":null,"body":"","file":"Przelewy24_Main.html"},"FraudPrevention":{"title":"Fraud Prevention","parents":[],"label":null,"body":"","file":"FraudPrevention.html"},"MobilePaymentSDK_IntegrationGuides":{"title":"Mobile Payment SDK","parents":["Integration Guides"],"label":null,"body":"","file":"MobilePaymentSDK_IntegrationGuides.html"},"MobilePaymentSDK_FirstSteps":{"title":"First Steps","parents":["Integration Guides","Mobile Payment SDK"],"label":null,"body":"Before you start coding, you are going to need some credentials:Get your own credentials by contacting Merchant Support.Next, depending on where you are from, you will need to choose your closest production environment: this is where your instance of MPSDK will be hosted. Both testing and production environments are available in every location.At the moment, the supported locations are as follows:","file":"MobilePaymentSDK_IntegrationGuides.html"},"MobilePaymentSDK_BasicSetup":{"title":"Basic Setup","parents":["Integration Guides","Mobile Payment SDK"],"label":null,"body":"","file":"MobilePaymentSDK_IntegrationGuides.html"},"MobilePaymentSDK_Android":{"title":"Integrating MPSDK on Android","parents":["Integration Guides","Mobile Payment SDK"],"label":null,"body":"For downloading MPSDK and basic setup, refer to Basic Setup.","file":"MobilePaymentSDK_IntegrationGuides.html"},"MobilePaymentSDK_iOS":{"title":"Integrating MPSDK on iOS","parents":["Integration Guides","Mobile Payment SDK"],"label":null,"body":"","file":"MobilePaymentSDK_IntegrationGuides.html"},"IntegrationGuides":{"title":"Integration Guides","parents":[],"label":null,"body":"","file":"IntegrationGuides.html"},"Klarna_Main":{"title":"Klarna","parents":["Payment Methods"],"label":null,"body":"","file":"Klarna_Main.html"},"Klarna":{"title":"REST API","parents":["Payment Methods","Klarna"],"label":null,"body":"Klarna is a type of Offline Bank Transfer.","file":"Klarna_Main.html"},"moip_Main":{"title":"moip Pagamentos","parents":["Payment Methods"],"label":null,"body":"","file":"moip_Main.html"},"MoipPagamentos":{"title":"REST API","parents":["Payment Methods","moip Pagamentos"],"label":null,"body":"moip Pagamentos is a type of Online Bank Transfer.","file":"moip_Main.html"},"IntegrationGuides_WPP_v1":{"title":"Wirecard Payment Page v1","parents":["Integration Guides"],"label":null,"body":"","file":"IntegrationGuides_WPP_v1.html"},"PP_HPP_Integration":{"title":"Hosted Payment Page","parents":["Integration Guides","Wirecard Payment Page v1"],"label":null,"body":"","file":"IntegrationGuides_WPP_v1.html"},"PP_EPP_Integration":{"title":"Embedded Payment Page","parents":["Integration Guides","Wirecard Payment Page v1"],"label":null,"body":"From a technical point of view, merchants just include one JavaScript library:A function call of that library provides the payment functionality:Or call a different name library with same functionality:","file":"IntegrationGuides_WPP_v1.html"},"Seamless_Integration":{"title":"Seamless Integration","parents":["Integration Guides","Wirecard Payment Page v1"],"label":null,"body":"Integration is done via JavaScript library which merchants include in their checkout page:There are three functions provided by the library:Renders the form. Parameters areSubmits the form. Parameters areSubmits the payment request. Parameters are","file":"IntegrationGuides_WPP_v1.html"},"PaymentPageSolutions_Fields":{"title":"Payment Page Fields","parents":["Integration Guides","Wirecard Payment Page v1"],"label":null,"body":"Most of the fields from REST API are also available for Hosted Payment Page (HPP), Embedded Payment Page (EPP) and Seamless integration, differing only in the usage of an underscore instead of a hyphen.The following table describes the fields that may appear in the HTML form in case of Hosted Payment Page (HPP) or as data for a JavaScript call in case of Embedded Payment Page (EPP) or Seamless integration.","file":"IntegrationGuides_WPP_v1.html"},"giropay_Main":{"title":"giropay","parents":["Payment Methods"],"label":null,"body":"","file":"giropay_Main.html"},"giropay":{"title":"REST API & Wirecard Payment Page v1/v2","parents":["Payment Methods","giropay"],"label":null,"body":"giropay is a type of Online Bank Transfer.","file":"giropay_Main.html"},"payolution_Main":{"title":"payolution","parents":["Payment Methods"],"label":null,"body":"","file":"payolution_Main.html"},"payolution":{"title":"REST API","parents":["Payment Methods","payolution"],"label":null,"body":"payolution is a type of Online Bank Transfer.","file":"payolution_Main.html"},"AppendixB":{"title":"Transaction Types","parents":["API Reference"],"label":null,"body":"","file":"AppendixB.html"},"AppendixB_TransactionTypesforCreditCard":{"title":"Credit Card","parents":["API Reference","Transaction Types"],"label":null,"body":"","file":"AppendixB.html"},"AppendixB_TransactionTypesforAlternativePaymentMethods":{"title":"Alternative Payment Methods","parents":["API Reference","Transaction Types"],"label":null,"body":"","file":"AppendixB.html"},"Sofort_Main":{"title":"Sofort.","parents":["Payment Methods"],"label":null,"body":"","file":"Sofort_Main.html"},"Sofort":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Sofort."],"label":null,"body":"Sofort is a type of Online Bank Transfer.","file":"Sofort_Main.html"},"PPv2_Sofort":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Sofort."],"label":null,"body":"","file":"Sofort_Main.html"},"WhatsNew":{"title":"Changelog","parents":[],"label":null,"body":"","file":"WhatsNew.html"},"FraudPrevention_AVS":{"title":"Address Verification System","parents":["Fraud Prevention"],"label":null,"body":"Each card scheme maintain an own set of return codes. To facilitate the implementation Wirecard maps those codes to a uniformed set of scheme independent response codes.","file":"FraudPrevention_AVS.html"},"FraudPrevention_AVS_PaymentResponse":{"title":"AVS in Payment Response","parents":["Fraud Prevention","Address Verification System"],"label":null,"body":"If merchant’s Wirecard provider account is configured to store AVS data (connector.avs.data.store=true) the AVS result is returned as additional part in the payment response and notification.","file":"FraudPrevention_AVS.html"},"FraudPrevention_AVS_WirecardResponseCodes":{"title":"Wirecard Response Codes","parents":["Fraud Prevention","Address Verification System"],"label":null,"body":"The following table outlines the set of codes used by Wirecard. This uniformed codes should be the preferred source for decisions related to AVS.","file":"FraudPrevention_AVS.html"},"FraudPrevention_AVS_AuthorizationEntity":{"title":"Authorization Entity","parents":["Fraud Prevention","Address Verification System"],"label":null,"body":"The Authorization Entity defines the party responding to the AVS Request.","file":"FraudPrevention_AVS.html"},"FraudPrevention_AVS_ProviderResponseCode":{"title":"Provider Response Code","parents":["Fraud Prevention","Address Verification System"],"label":null,"body":"The Provider Response Code is the code returned from the provider. If the business case was activated for AVS the code it is returned together in the response, together with the human readable Provider Response Message. The following table lists the current set of codes used by the card schemes and outlines the mapping between the Provider Response Code and the unified Wirecard Response Code. Please note that the actual Provider Response Code depends on the actual used provider and could be also changed and extended by the provider. So it may differ from the table below. Therefore Wirecard recommends the preferred usage of the Wirecard Response Code.","file":"FraudPrevention_AVS.html"},"AlipayCrossBorder_Main":{"title":"Alipay Cross-border","parents":["Payment Methods"],"label":null,"body":"","file":"AlipayCrossBorder_Main.html"},"API_AlipayCrossBorder":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Alipay Cross-border"],"label":null,"body":"Alipay Cross-border is a type of Wallet.","file":"AlipayCrossBorder_Main.html"},"PPv2_AlipayCrossborder":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Alipay Cross-border"],"label":null,"body":"","file":"AlipayCrossBorder_Main.html"},"PaymentPageSolutions":{"title":"Payment Page Solutions","parents":["Integration Options"],"label":null,"body":"Our payment page solutions maximize the user experience of the checkout process by giving you control over its design and feel. With three readily available integration options, you decide where and how you want your customers to pay, while still enjoying the benefits of a dependable payment solution. All you need to get started is PCI SAQ A compliance. Each of our payment page products focus on filling different needs, so you can choose based on what you want for your business.","file":"PaymentPageSolutions.html"},"PPv2":{"title":"Wirecard Payment Page v2","parents":["Integration Options","Payment Page Solutions"],"label":null,"body":"Wirecard Payment Page v2 (WPP v2) is an online checkout solution which combines a highly customizable user interface with payment processing for various payment methods.WPP v2 allows merchants to customize the visual representation of their payment page while keeping an optimal payment flow. WPP v2 is designed to streamline integration so merchants can accept payments quickly. Additionally, Wirecard hosts all sensitive data so merchants can focus on their business instead of worrying about data security and PCI.Merchants can easily modify the design of WPP v2 through Payment Page Designer, an intuitive web interface for customizing nearly every visual element the consumer would see. As an added benefit, using Designer requires no graphical design experience or coding - new payment pages can be created in minutes!WPP v2 provides an appealing user interface for Wirecard Payment Gateway (WPG), enhancing the user experience of paying customers. Payments are created through backend payment sessions which supply a live URL to the payment page.Customers are redirected to this URL where they submit the payment and WPP v2 handles the processing automatically, for the benefit of both the merchant & customer.This documentation is primarily for developers integrating WPP v2 into an online shop. Each variation of WPP v2 has a short introduction, and a more extensive overview of integration procedures and code.A basic understanding of REST API services, JavaScript and HTML is assumed.Merchants can accept Credit Card payments from all the major card schemes and various local providers as well as many alternative payment methods. See the list of all supported payment methods below:","file":"PaymentPageSolutions.html"},"PP":{"title":"Wirecard Payment Page v1","parents":["Integration Options","Payment Page Solutions"],"label":null,"body":"Wirecard Payment Page handles the payment method selection as well as the collection of payment details or consumer redirects to alternative payment provider sites. With this solution, the merchant is only required to conform to a limited PCI scope (self-questionnaire A).Wirecard Payment Page v1 is available in three formats:","file":"PaymentPageSolutions.html"},"PPv2_DemoShopLink":{"title":"Demo Shop","parents":["Integration Options","Payment Page Solutions"],"label":null,"body":"You can go directly to the Wirecard Demo Shop.The Wirecard Demo Shop simulates a merchant e-shop with integrated Wirecard Payment Gateway capabilities, serving as a showcase of our Hosted Payment Page, Embedded Payment Page and Seamless Payment Page solutions.All through a straightforward, minimalistic interface you can, among others,The integration code is ready-to-use at all times, reacting to your changes, with logs available as well.","file":"PaymentPageSolutions.html"},"StatusCodes":{"title":"Status Codes and Statuses","parents":["API Reference"],"label":null,"body":"","file":"StatusCodes.html"},"StatusCodes_Categorizations":{"title":"Categories","parents":["API Reference","Status Codes and Statuses"],"label":null,"body":"","file":"StatusCodes.html"},"StatusCodes_InDetail":{"title":"Status Codes in Detail","parents":["API Reference","Status Codes and Statuses"],"label":null,"body":"For the payment method Credit Card we provide special card numbers for Amex, DINERS, DISCOVER, JCB, MAESTRO, Mastercard and VISA to test a variety of status codes.Those status codes you can test (mostly codes that begin with 500.1xxx), are marked bold and provide a link that points directly to the list of all the possible card numbers, 3D and Non-3D, associated with the testable status codes.","file":"StatusCodes.html"},"AppendixK":{"title":"Test Data and Credentials","parents":["API Reference"],"label":null,"body":"","file":"AppendixK.html"},"Imprint":{"title":"Imprint and Privacy Policy","parents":[],"label":null,"body":"","file":"Imprint.html"},"BatchProcessingApi":{"title":"Batch Processing API","parents":["Integration Options"],"label":null,"body":"In order to process multiple transactions at the same time, Wirecard’s Batch Processing API is the ideal and secure solution to implement quick and easy offline transaction processing.Batch processing is possible for the following payment methods:","file":"BatchProcessingApi.html"},"BatchProcessingApi_WPGvsSepaConversionService":{"title":"SEPA Service","parents":["Integration Options","Batch Processing API"],"label":null,"body":"Until all merchants have migrated their consumers to SEPA, Wirecard offers a SEPA Conversion Service.SEPA Transactions included in the Wirecard Payment Gateway request file should not be confused with SEPA Conversion Service (EFT) request files.A merchant may send Wirecard Payment Gateway request files and EFT transaction request files to the same SFTP directory. Wirecard Payment Gateway files should be provided in CSV format, EFT request files must be submitted in xml. The batch service picks up the appropriate files according to the file type automatically.","file":"BatchProcessingApi.html"},"ssl_certificates":{"title":"SSL Certificates","parents":["API Reference"],"label":null,"body":"We are going to update our system at the beginning of March. Download the new certificates to keep the connection between you and Wirecard Payment Gateway secure (e.g. \"certificate pinning\").","file":"ssl_certificates.html"},"ssl_testenvironment":{"title":"Test Environment","parents":["API Reference","SSL Certificates"],"label":null,"body":"","file":"ssl_certificates.html"},"ssl_prodenvironment":{"title":"Production Environment","parents":["API Reference","SSL Certificates"],"label":null,"body":"","file":"ssl_certificates.html"},"POLi_Main":{"title":"POLi","parents":["Payment Methods"],"label":null,"body":"","file":"POLi_Main.html"},"POLi":{"title":"REST API","parents":["Payment Methods","POLi"],"label":null,"body":"POLi is a type of Online Bank Transfer.","file":"POLi_Main.html"},"AppendixE":{"title":"Countries and Currencies","parents":["API Reference"],"label":null,"body":"Countries follow the ISO 3166-1-alpha-2 code.Country Names and Code ElementsCurrencies follow the ISO 4217 3-char alphabetic code.Currency Codes","file":"AppendixE.html"},"AppendixI_FAQ":{"title":"FAQ","parents":["API Reference"],"label":null,"body":"<status code=\"400.1048\" description=\"This Merchant Account does not have a Provider Account associated with it. Please contact technical support.\" severity=\"error\"/>You are passing a payment method, card type, or currency that is not properly configured on your merchant account. Please contact your PSP to double-check your merchant account setup.<status code=\"400.1018\" description=\"The same Request Id for the Merchant Account is being tried a second time. Please use another Request Id.\" severity=\"error\"/>The <request-id> element must be unique for every transaction. If the problem persists, please contact technical support as it can also be an indication of a technical error.Please ensure that the HTTP Content-Type Header to is set to \"application/xml\" in your request.Content-Type: application/xmlAuthentication is done via Basic HTTP authentication. See https://en.wikipedia.org/wiki/Basic_access_authentication#Protocol for more information.Please double-check the <merchant-account-id> you are using. In addition, you must supply a valid <request-id> that references a submitted transaction.There are 2 ways to perform recurring transactions:","file":"AppendixI_FAQ.html"},"Skrill_Main":{"title":"Skrill Digital Wallet","parents":["Payment Methods"],"label":null,"body":"","file":"Skrill_Main.html"},"SkrillDigitalWallet":{"title":"REST API & Wirecard Payment Page v1/v2","parents":["Payment Methods","Skrill Digital Wallet"],"label":null,"body":"Skrill Digital Wallet is a type of Wallet.","file":"Skrill_Main.html"},"Mobicred_Main":{"title":"Mobicred","parents":["Payment Methods"],"label":null,"body":"","file":"Mobicred_Main.html"},"mobicred":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Mobicred"],"label":null,"body":"mobicred is a type of Wallet.","file":"Mobicred_Main.html"},"CreditCard_3DS2":{"title":"3D Secure 2","parents":["Payment Processing"],"label":null,"body":"The EMVCo have devised a new standard authentication method for payment card transactions: 3D Secure 2 (3DS2).This new protocol fulfills the Strong Customer Authentication (SCA) requirements set by the EU’s Second Payment Service Directive for online payments within the European Economic Area (EEA).3D Secure 2 is now available and set to become the prime authentication method for online card payments, thanks to a number of updates that improve not only the security, but also the consumer experience of 3D Secure 1 (3DS).","file":"CreditCard_3DS2.html"},"CreditCard_PSD2":{"title":"What is PSD 2?","parents":["Payment Processing","3D Secure 2"],"label":null,"body":"The EU’s Second Payment Service Directive (PSD2) aims to reduce fraud in the European e-commerce sector. Since the largest percentage of all card fraud in Europe happens in card-not-present transactions, the PSD2 makes Strong Customer Authentication (SCA) mandatory for consumer-initiated online payments within the European Economic Area (EEA).While the regulations defined in PSD2 apply to acquirers and issuers, the effects will also concern EEA merchants and consumers.To get you ready for SCA, the EMVCo have developed 3D Secure 2, a new authentication protocol for payment card transactions.","file":"CreditCard_3DS2.html"},"CreditCard_3DS2_PMs":{"title":"Supported Card Brands","parents":["Payment Processing","3D Secure 2"],"label":null,"body":"3D Secure 2 has been developed, and is supported, by Mastercard, VISA, American Express, UPI, Diners Club, Discover, and JCB.","file":"CreditCard_3DS2.html"},"CreditCard_3DS2_Help":{"title":"We Help You Transition","parents":["Payment Processing","3D Secure 2"],"label":null,"body":"","file":"CreditCard_3DS2.html"},"AppendixF":{"title":"3D Secure Workflows","parents":["Payment Processing","3D Secure 2"],"label":null,"body":"1. Check-enrollment: This first step initiates the payment session and checks if the consumer’s card is enrolled in the 3D Secure 2 program. 1.1 Consumer (cardholder) checkout on your payment page.1.2 Initiate the payment session with Wirecard Payment Gateway using the check-enrollment transaction type. Provide additional fields for 3D Secure 2 transactions. 3D Secure 2 fields can be found in the 3D Secure 2 field table and are included in the REST API payment XSD.1.3 Wirecard Payment Gateway checks the 3D Secure version supported by the issuer with the 3D Secure server. 1.4 Wirecard Payment Gateway returns the check-enrollment response. It includes the PAReq, the ACS URL, and the 3D Secure version.2. Redirect the consumer to the ACS URL 2.1 Send an HTTPS POST request including the ACS URL, the <PAReq>, the <TermUrl> and <MD>. 2.2 The ACS URL points to the public endpoint of the Wirecard 3D Secure Router which decodes the <PAReq>. 2.3 The Wirecard 3D Secure Router returns an HTML with the scheme logo and a \"processing\" screen which is displayed in the consumer’s browser. 2.4 The Wirecard 3D Secure Router redirects the consumer to the 3DSMethodURL for device fingerprinting. 2.5 The Issuer ACS gathers the information and redirects the 3D Secure method completion information to the Wirecard 3D Secure Router URL. 2.6 The Wirecard 3D Secure Router initiates authentication with the issuer’s ACS via the scheme directory server. 2.7 The Wirecard 3D Secure Router posts the SSL-encrypted and digitally signed PARes (Payment Authentication response) to the TermURL via the consumer’s browser.3. Check-payer-response (optional) and PARes verification: Use this request to receive, analyze and store authentication values on your side or use your connection to the Wirecard Payment Gateway.  The check-payer-response provides the authentication values needed later for completion of the payment transaction. It is executed after you receive the check-enrollment response and the PARes. 3.1 Send a POST request with transaction type check-payer-response to Wirecard Payment Gateway. Provide the parent-transaction-id using the transaction-id from the check-enrollment response, and the PARes. 3.2 Wirecard Payment Gateway decodes the PARes, checks the signature and retrieves the final authentication values. 3.3 Wirecard Payment Gateway returns the final authentication values in the response of the check-payer-response transaction. These include the dsTransId, CAAV/AVV, ECI, and authenticationStatus.4. Complete the payment transaction: Proceed with the payment transaction with the relevant transaction-type (e.g. authorization, purchase, authorization-only). Use the final authentication values received either from the check-enrollment response(e.g. PARes and parent-transaction-id), or from step 3.3 (check-payer-response response).1. Check-enrollment: This first step initiates the payment session and checks if the consumer’s card is enrolled in the 3D Secure 2 program. 1.1 Consumer (cardholder) checkout on your payment page.1.2 Initiate the payment session with Wirecard Payment Gateway using the check-enrollment transaction type. Provide additional fields for 3D Secure 2 transactions. 3D Secure 2 fields can be found in the 3D Secure 2 field table and are included in the REST API payment XSD.1.3 Wirecard Payment Gateway checks the 3D Secure version supported by the issuer with the 3D Secure server. 1.4 Wirecard Payment Gateway returns the check-enrollment response. It includes the PAReq, the ACS URL, and the 3D Secure version.2. Redirect the consumer to the ACS URL 2.1 Send an HTTPS POST request including the ACS URL, the <PAReq>, the <TermUrl> and <MD>. 2.2 The ACS URL points to the public endpoint of the Wirecard 3D Secure Router which decodes the <PAReq>. 2.3 The Wirecard 3D Secure Router returns an HTML with the scheme logo and a \"processing\" screen which is displayed in the consumer’s browser. 2.4 The Wirecard 3D Secure Router redirects the consumer to the 3DSMethodURL for device fingerprinting. 2.5 The Issuer ACS gathers the information and redirects the 3D Secure method completion information to the Wirecard 3D Secure Router URL. 2.6 The Wirecard 3D Secure Router initiates authentication with the issuer’s ACS via the scheme directory server. 2.7 The Wirecard 3D Secure Router redirects the consumer to the ACS which displays a challenge window (either a page or an iframe). 2.8 The consumer enters their data. After successful authentication, the ACS sends the challenge response to the Wirecard 3D Secure Router. 2.9 The Wirecard 3D Secure Router posts the SSL-encrypted and digitally signed PARes (Payment Authentication response) to the TermURL via the consumer’s browser.3. Check-payer-response (optional) and PARes verification: Use this request to receive, analyze and store authentication values on your side or use your connection to the Wirecard Payment Gateway.  The check-payer-response provides the authentication values needed later for completion of the payment transaction. It is executed after you receive the check-enrollment response and the PARes. 3.1 Send a POST request with transaction type check-payer-response to Wirecard Payment Gateway. Provide the parent-transaction-id using the transaction-id from the check-enrollment response, and the PARes. 3.2 Wirecard Payment Gateway decodes the PARes, checks the signature and retrieves the final authentication values. 3.3 Wirecard Payment Gateway returns the final authentication values in the response of the check-payer-response transaction. These include the dsTransId, CAAV/AVV, ECI, and authenticationStatus.4. Complete the payment transaction: Proceed with the payment transaction with the relevant transaction-type (e.g. authorization, purchase, authorization-only). Use the final authentication values received either from the check-enrollment response (e.g. PARes and parent-transaction-id), or from step 3.3 (check-payer-response response).1. Check-enrollment: This first step initiates the payment session and checks if the consumer’s card is enrolled in the 3D Secure 2 program. 1.1 Consumer (cardholder) checkout on your payment page.1.2 Initiate the payment session with Wirecard Payment Gateway using the check-enrollment transaction type. Provide additional fields for 3D Secure 2 transactions. 3D Secure 2 fields can be found in the 3D Secure 2 field table and are included in the REST API payment XSD.1.3 Wirecard Payment Gateway checks the 3D Secure version supported by the issuer with the 3D Secure server. If 3D Secure 2 is not supported then the 3D Secure server initiates the fallback to version 1 via the 3D Secure MPI. 1.4 Wirecard Payment Gateway returns the check-enrollment response. It includes the PAReq, the ACS URL, and the 3D Secure version.2. Redirect the consumer to the ACS URL 2.1 Send an HTTPS POST request including the ACS URL, the <PAReq>, the <TermUrl> and <MD>. 2.2 The ACS URL points to the public endpoint of the issuer ACS, which decodes the <PAReq>. The ACS displays the authentication window for the cardholder. 2.3 The consumer enters their data in the authentication window displayed by the ACS. 2.4 The issuer ACS verifies the authentication credentials and posts the SSL-encrypted and digitally signed PARes (Payment Authentication response), as well as the <MD> to the TermURL via the consumer’s browser.3. Check-payer-response (optional) and PARes verification: Use this request to receive, analyze and store authentication values on your side or use your connection to the Wirecard Payment Gateway.  The check-payer-response provides the authentication values needed later for completion of the payment transaction. It is executed after you receive the check-enrollment response and the PARes. 3.1 Send a POST request with transaction type check-payer-response to Wirecard Payment Gateway. Provide the parent-transaction-id using the transaction-id from the check-enrollment response, and the PARes. 3.2 Wirecard Payment Gateway verifies the PARes with the 3D Secure MPI and receives the final authentication values. 3.3 Wirecard Payment Gateway returns the final authentication values in the response of the check-payer-response transaction. These include the XID, CAAV/AVV, ECI, and authenticationStatus.4. Complete the payment transaction: Proceed with the payment transaction with the relevant transaction-type (e.g. authorization, purchase, authorization-only). Use the final authentication values received either from the check-enrollment response (e.g. PARes and parent-transaction-id), or from step 3.3 (check-payer-response response).","file":"CreditCard_3DS2.html"},"API_CC_3DS2_PaymentFlows":{"title":"3D Secure 2 Payment Flows","parents":["Payment Processing","3D Secure 2"],"label":null,"body":"","file":"CreditCard_3DS2.html"},"CreditCard_3DS2_UseCases":{"title":"3D Secure 2 Use Cases","parents":["Payment Processing","3D Secure 2"],"label":null,"body":"The following list covers the most typical use cases and business scenarios. Please keep in mind that other transaction workflows are possible. For standard check-enrollment request and response samples, head to our Credit Card Samples section. You can find more details on the implementation of these use cases in our 3D Secure 2 Payment Flows.","file":"CreditCard_3DS2.html"},"Reporting_IcFeeReport":{"title":"IC Fee Report","parents":["Reporting"],"label":null,"body":"Since December 2015, the IRF (EU regulation) requires to provide reporting to all merchants with regard to the amounts invoiced to them per Aggregates. All charges must be listed in such reporting, including fees.This ICF-Overview Report contains signed invoices as well as cancelations, with their transactions, aggregated per each transaction type and total amount of fees. Data is collected every month for a previous month period in a .csv file per each merchant and delivered to all merchants via the WEP document center or an SFTP server.The IC-Overview Report is a .csv file, containing neither Floating ranges nor Price points for those ranges.The regularly scheduled overview report file’s name format is: Interchange_CustomerID_MerchantShortName-MerchantAccountShortName_StartDate_EndDate_ReportPeriod.csv (ReportPeriod is \"monthly\").The detailed report file’s name format is: InterchangeDetailed_CustomerID_MerchantShortName-MerchantAccountShortName_StartDate_EndDate_ReportPeriod_v1.csv (ReportPeriod is \"Individual\").Some fields appear in the monthly report (Appearance = M), some in the detailed report (Appearance = D) and some in both (Appearance = M/D). If you need the fields from the detailed report (Start and End Dates are provided explicitly), please contact Merchant Support.The ICF-Overview Report is scheduled on a regular basis on the 8th day of each month at 8 pm. The reports are generated for those merchants who requested it and had any billed credit card transactions during the preceding month. Each generated report is delivered to each merchant as .csv file viaPlease contact Merchant Support for details.","file":"Reporting_IcFeeReport.html"},"MobilePaymentSDK":{"title":"Mobile Payment SDK","parents":["Integration Options"],"label":null,"body":" Mobile Payment SDK (MPSDK) is a lightweight user interface for the Wirecard Payment Gateway.MPSDK offers a seamless user experience by rendering a payment form as if it’s built in the merchant’s mobile application.This documentation was written for developers who will be integrating MPSDK into their mobile application. On this page, you will find general information you need to get started. For integration docs, refer to the subpage Basic Setup and Integration.A list of the currently supported payment methods can be found in Available Payment Methods below.","file":"MobilePaymentSDK.html"},"MobilePaymentSDK_PaymentMethods":{"title":"Available Payment Methods","parents":["Integration Options","Mobile Payment SDK"],"label":null,"body":"We recommend using Instant Payment Notification, instead of the default MPSDK responses, as they are much more reliable.","file":"MobilePaymentSDK.html"},"paysafecard_Main":{"title":"paysafecard","parents":["Payment Methods"],"label":null,"body":"","file":"paysafecard_Main.html"},"paysafecard":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","paysafecard"],"label":null,"body":"paysafecard is a prepaid payment solution.","file":"paysafecard_Main.html"},"PPv2_paysafecard":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","paysafecard"],"label":null,"body":"","file":"paysafecard_Main.html"},"Trustly_Main":{"title":"Trustly","parents":["Payment Methods"],"label":null,"body":"","file":"Trustly_Main.html"},"Trustly":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Trustly"],"label":null,"body":"Trustly is a type of Online Bank Transfer.","file":"Trustly_Main.html"},"PaymentProcessing":{"title":"Payment Processing","parents":[],"label":null,"body":"","file":"PaymentProcessing.html"},"CIMBClicks_Main":{"title":"CIMB Clicks","parents":["Payment Methods"],"label":null,"body":"","file":"CIMBClicks_Main.html"},"CIMBClicks":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","CIMB Clicks"],"label":null,"body":"CIMB Clicks is a type of Online Bank Transfer.","file":"CIMBClicks_Main.html"},"Boleto_Main":{"title":"Boleto","parents":["Payment Methods"],"label":null,"body":"","file":"Boleto_Main.html"},"Boleto":{"title":"REST API","parents":["Payment Methods","Boleto"],"label":null,"body":"Boleto is a type of Offline Bank Transfer.","file":"Boleto_Main.html"},"Appendix_Xml":{"title":"XML Schema Specification","parents":["API Reference"],"label":null,"body":"XSD (XML Schema Definition), a recommendation of the World Wide Web Consortium (W3C), specifies how to formally describe the elements in an Extensible Markup Language (XML) document. It can be used by programmers to verify each piece of item content in a document. They can check if it adheres to the description of the element it is placed in.Download the XSD file: payment.xsd","file":"Appendix_Xml.html"},"Paydirekt_Main":{"title":"paydirekt","parents":["Payment Methods"],"label":null,"body":"","file":"Paydirekt_Main.html"},"paydirekt":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","paydirekt"],"label":null,"body":"paydirekt is a type of Online Bank Transfer.","file":"Paydirekt_Main.html"},"PPv2_paydirekt":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","paydirekt"],"label":null,"body":"paydirekt is a payment method offered by Germany’s private banks and local cooperative banks. paydirekt is integrated into the systems of the participating banks and follows the strict requirements of the German banking industry. It offers an immediate payment guarantee, a simple interface, as well as high transaction security.paydirekt is a type of Online Bank Transfer.","file":"Paydirekt_Main.html"},"GuaranteedDirectDebit_Main":{"title":"Guaranteed Direct Debit by Wirecard","parents":["Payment Methods"],"label":null,"body":"","file":"GuaranteedDirectDebit_Main.html"},"GuaranteedDirectDebit":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Guaranteed Direct Debit by Wirecard"],"label":null,"body":"Guaranteed Direct Debit is a type of Offline Bank Transfer.","file":"GuaranteedDirectDebit_Main.html"},"PPv2_GuaranteedDirectDebit":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Guaranteed Direct Debit by Wirecard"],"label":null,"body":"Guaranteed Direct Debit allows the consumer to pay directly from their bank account. The invoicing, direct debit and collection process (dunning) is handled by Wirecard. Guaranteed Direct Debit ensures that merchants receive the payment amount from Wirecard prior to settlement with consumers.Guaranteed Direct Debit by Wirecard is a type of Offline Bank Transfer.","file":"GuaranteedDirectDebit_Main.html"},"MultiPaymentApi":{"title":"Multi Payment API","parents":["Integration Options"],"label":null,"body":"The Multi Payment API allows a merchant to offer a combination of payment methods in his shop to the consumer. A classic example is that the consumer can pay with one or more vouchers or a voucher and credit card together.Check out our integration guide for more information on transaction types, retrieving multi-payments, workflows, etc.","file":"MultiPaymentApi.html"},"RestApi_Fields":{"title":"Fields","parents":["API Reference"],"label":null,"body":"These fields are used with Wirecard Payment Gateway REST API. They are mandatory (M) or optional (O) in a request. Fields that show only in the response are marked accordingly.Please refer to the XSD for details about the field’s value range.","file":"RestApi_Fields.html"},"RestApi_Fields_sub":{"title":"Request and Response Fields","parents":["API Reference","Fields"],"label":null,"body":"","file":"RestApi_Fields.html"},"VISACheckout_Main":{"title":"VISA Checkout","parents":["Payment Methods"],"label":null,"body":"","file":"VISACheckout_Main.html"},"VISACheckout":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","VISA Checkout"],"label":null,"body":"VISA Checkout is a type of Wallet.","file":"VISACheckout_Main.html"},"PayPal_Main":{"title":"PayPal","parents":["Payment Methods"],"label":null,"body":"","file":"PayPal_Main.html"},"API_PaymentMethods_PayPal":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","PayPal"],"label":null,"body":"PayPal is a type of Wallet.","file":"PayPal_Main.html"},"PPv2_PayPal":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","PayPal"],"label":null,"body":"","file":"PayPal_Main.html"},"GuaranteedInstallment_Main":{"title":"Guaranteed Installment by Wirecard","parents":["Payment Methods"],"label":null,"body":"","file":"GuaranteedInstallment_Main.html"},"GuaranteedInstallment":{"title":"REST API","parents":["Payment Methods","Guaranteed Installment by Wirecard"],"label":null,"body":"Wirecard Payment in Installments is a type of Offline Bank Transfer.","file":"GuaranteedInstallment_Main.html"},"PPv2_GuaranteedInstallment":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Guaranteed Installment by Wirecard"],"label":null,"body":"Guaranteed Installment by Wirecard allows the consumer to pay directly from their bank account while providing the option for payment in a customized number of installments. The invoicing, direct debit, collection process (dunning), as well as the calculation of possible installments, is handled by Wirecard. Guaranteed Installment by Wirecard ensures that merchants receive the payment amount from Wirecard prior to settlement with consumers.Guaranteed Installment by Wirecard is a type of Offline Bank Transfer.","file":"GuaranteedInstallment_Main.html"},"ContactUs":{"title":"Contact Us","parents":[],"label":null,"body":"","file":"ContactUs.html"},"moneta_Main":{"title":"moneta.ru","parents":["Payment Methods"],"label":null,"body":"","file":"moneta_Main.html"},"monetaRu":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","moneta.ru"],"label":null,"body":"moneta.ru is a type of Wallet.","file":"moneta_Main.html"},"Interac_Main":{"title":"Interac","parents":["Payment Methods"],"label":null,"body":"","file":"Interac_Main.html"},"Interac":{"title":"REST API","parents":["Payment Methods","Interac"],"label":null,"body":"Interac is a type of Online Bank Transfer.","file":"Interac_Main.html"},"Paylib_Main":{"title":"Paylib","parents":["Payment Methods"],"label":null,"body":"","file":"Paylib_Main.html"},"Paylib":{"title":"REST API","parents":["Payment Methods","Paylib"],"label":null,"body":"Paylib is a type of Wallet.","file":"Paylib_Main.html"},"PPv2_paylib":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Paylib"],"label":null,"body":"","file":"Paylib_Main.html"},"APIRef_FieldDefs":{"title":"Field Definitions","parents":["API Reference"],"label":null,"body":"","file":"APIRef_FieldDefs.html"},"APIRef_FieldDefs_Name":{"title":"Name","parents":["API Reference","Field Definitions"],"label":null,"body":"The field name structure is based on the hierarchical relation between individual elements. Example: order-items.order-item.article-numberIn the example, the parent element is order-items, and its child order-item. order-item itself is also a parent element of its child article-number. The hierarchies are separated by a dot . Attributes are indicated by an @","file":"APIRef_FieldDefs.html"},"APIRef_FieldDefs_Cardinality":{"title":"Cardinality","parents":["API Reference","Field Definitions"],"label":null,"body":"Cardinality indicates if the field is necessary for the request to work. A field can be either mandatory (M) or optional (O).","file":"APIRef_FieldDefs.html"},"APIRef_FieldDefs_DataTypes":{"title":"Data Types","parents":["API Reference","Field Definitions"],"label":null,"body":"Data types define the input values that can be used for a field.","file":"APIRef_FieldDefs.html"},"APIRef_FieldDefs_Size":{"title":"Size","parents":["API Reference","Field Definitions"],"label":null,"body":"Size shows how many characters can be used for this field. We provide the maximum value so you can make sure the whole amount of characters is processed.In general, the Wirecard Payment Gateway allows all characters for each field, depending on the Data Type.If other rules apply to a field, they are stated in the Description column.","file":"APIRef_FieldDefs.html"},"SEPA":{"title":"SEPA","parents":["Payment Methods"],"label":null,"body":"Wirecard offers two SEPA payment methods.SEPA Direct Debit is very popular in Germany, Austria and the Netherlands.","file":"SEPA.html"},"SEPA_TransactionTypes":{"title":"Transaction Types","parents":["Payment Methods","SEPA"],"label":null,"body":"The following transaction types may be used with both SEPA Direct Debit and SEPA Credit Transfer payment methods. For payment method specific transaction types, please refer to the individual payment method pages.","file":"SEPA.html"},"SEPA_DynamicDescriptor":{"title":"Dynamic Descriptor","parents":["Payment Methods","SEPA"],"label":null,"body":"Just like Credit Card it is also possible to use a Dynamic Descriptor with SEPA.","file":"SEPA.html"},"SEPA_Reporting":{"title":"Reporting","parents":["Payment Methods","SEPA"],"label":null,"body":"A reconciliation file is available to download by merchants. This allows merchant to have the most up-to-date status for their transactions. For more information about the reconciliation file see chapter Data Reconciliation or please contact Wirecard Merchant Support.","file":"SEPA.html"},"SEPA_Reporting_BankDataValidation":{"title":"Bank Data Validation","parents":["Payment Methods","SEPA"],"label":null,"body":"The Wirecard Payment Gateway validates the consumer’s bank data, to ensure transactions with faulty bank data are not forwarded to the bank for processing.","file":"SEPA.html"},"SEPA_ReturnCodes":{"title":"Return Codes","parents":["Payment Methods","SEPA"],"label":null,"body":"SEPA transactions may be returned by either the merchant or consumer bank for several reasons described below.","file":"SEPA.html"},"IntegrationGuides_WPP_v2":{"title":"Wirecard Payment Page v2","parents":["Integration Guides"],"label":null,"body":"","file":"IntegrationGuides_WPP_v2.html"},"PaymentPageSolutions_PPv2_HPP_Integration":{"title":"HPP Integration Guide","parents":["Integration Guides","Wirecard Payment Page v2"],"label":null,"body":" ","file":"IntegrationGuides_WPP_v2.html"},"PaymentPageSolutions_PPv2_EPP_Integration":{"title":"EPP Integration Guide","parents":["Integration Guides","Wirecard Payment Page v2"],"label":null,"body":" ","file":"IntegrationGuides_WPP_v2.html"},"PPv2_Seamless_Integration":{"title":"Seamless Integration Guide","parents":["Integration Guides","Wirecard Payment Page v2"],"label":null,"body":" ","file":"IntegrationGuides_WPP_v2.html"},"FraudPrevention_DeviceFingerprinting":{"title":"Device Fingerprint","parents":["Fraud Prevention"],"label":null,"body":"","file":"FraudPrevention_DeviceFingerprinting.html"},"FraudPrevention_DeviceFingerprint_Integration":{"title":"Integration","parents":["Fraud Prevention","Device Fingerprint"],"label":null,"body":"In order to integrate Wirecard’s Device Fingerprint (FPS) with your website, you need to insert Profiling Tags on web pages where you will profile consumer’s devices. You can either insert the tags directly into your website, or use our iframe service to embed the tags within an iframe.Profiling Tags are placed on HTML pages served by your web application, and allow Wirecard to collect device information from the consumer’s browser. You need to identify pages in your web application in which to place the tags that ensures that their devices are profiled before submitting a transaction.","file":"FraudPrevention_DeviceFingerprinting.html"},"FraudPrevention_DeviceFingerprint_Transmit":{"title":"Transmit to WPG","parents":["Fraud Prevention","Device Fingerprint"],"label":null,"body":"To use the Device Fingerprint the session_id (generated as above) has to be transmitted with the payment transaction to the Wirecard Payment Gateway.The Wirecard Payment Gateway provides the field device/fingerprint for this process. For details see the REST API Fields list.","file":"FraudPrevention_DeviceFingerprinting.html"},"RestApi":{"title":"REST API","parents":["Integration Options"],"label":null,"body":"The Payment Processing API conforms to the design principles of Representational State Transfer (REST). Wirecard Payment Gateway provides access to resources (data entities) via URL paths. To use a REST API, your application will make an HTTP request and parse the response. By default, the response format is XML. If you wish, you can request JSON instead of XML. Your methods will be the standard HTTP methods such as GET, PUT, POST and DELETE.The API currently supports the following data formats:Change the format extension to a request or set the HTTP accept header to get results in the format of your choice. Methods to retrieve data from the Payment Processing API require a GET request. Methods that submit data require a POST.Some API methods use optional or requisite parameters. Two things to keep in mind when making requests with parameters:Because the Payment Processing API is based on open standards, any web development language may be used to access the API.","file":"RestApi.html"},"RestApi_Security":{"title":"Security","parents":["Integration Options","REST API"],"label":"REST API","body":"Every request sent to Wirecard Payment Gateway is authorized and authenticated. Users are authenticated using basic authentication over an SSL enabled channel. The Merchant Account configuration is used to authorize the request.","file":"RestApi.html"},"RestApi_GoingOnProduction":{"title":"Going on Production","parents":["Integration Options","REST API"],"label":"REST API","body":"","file":"RestApi.html"},"RestApi_Payment":{"title":"Create a Payment","parents":["Integration Options","REST API"],"label":"REST API","body":"Requests to the endpoints can be sent as XML, JSON or NVP (for credit card only).Structure and fields naming convention is based on payment.xsd so there are the same field names used within JSON request/response as well as within XML request/response.","file":"RestApi.html"},"RestApi_Simulations":{"title":"Simulations","parents":["Integration Options","REST API"],"label":"REST API","body":"","file":"RestApi.html"},"RestApi_Samples":{"title":"Samples","parents":["Integration Options","REST API"],"label":"REST API","body":"","file":"RestApi.html"},"Maybank2U_Main":{"title":"Maybank2U","parents":["Payment Methods"],"label":null,"body":"","file":"Maybank2U_Main.html"},"Maybank2u":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Maybank2U"],"label":null,"body":"Maybank2u is a type of Online Bank Transfer.","file":"Maybank2U_Main.html"},"SEPACreditTransfer_Rest":{"title":"SEPA Credit Transfer","parents":["Payment Methods"],"label":null,"body":"","file":"SEPACreditTransfer_Rest.html"},"SEPACreditTransfer":{"title":"REST API","parents":["Payment Methods","SEPA Credit Transfer"],"label":null,"body":"SEPA Credit Transfer is a type of Offline Bank Transfer.Wirecard Payment Gateway supports referenced and non-referenced SEPA Credit Transfer options.","file":"SEPACreditTransfer_Rest.html"},"GooglePay_Main":{"title":"Google Pay™","parents":["Payment Methods"],"label":null,"body":"","file":"GooglePay_Main.html"},"GooglePay":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Google Pay™"],"label":null,"body":"","file":"GooglePay_Main.html"},"Glossary":{"title":"Glossary","parents":[],"label":null,"body":"","file":"Glossary.html"},"CC_Main":{"title":"Credit Card","parents":["Payment Methods"],"label":null,"body":"","file":"CC_Main.html"},"CreditCard":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Credit Card"],"label":null,"body":"","file":"CC_Main.html"},"PPv2_CC":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Credit Card"],"label":null,"body":"","file":"CC_Main.html"},"Voucher_Main":{"title":"Wirecard Voucher","parents":["Payment Methods"],"label":null,"body":"","file":"Voucher_Main.html"},"WirecardVoucher":{"title":"REST API & Wirecard Payment Page v1/v2","parents":["Payment Methods","Wirecard Voucher"],"label":null,"body":"Wirecard Voucher is a type of voucher payment.","file":"Voucher_Main.html"},"MultiPaymentApi_Integration":{"title":"Multi Payment API","parents":["Integration Guides"],"label":null,"body":"The Multi Payment API currently supports the following data formats:","file":"MultiPaymentApi_Integration.html"},"MultiPaymentApi_TransactionTypes":{"title":"Transaction Types","parents":["Integration Guides","Multi Payment API"],"label":null,"body":"","file":"MultiPaymentApi_Integration.html"},"MultiPaymentApi_GoingonProduction":{"title":"Going on Production","parents":["Integration Guides","Multi Payment API"],"label":null,"body":"The following table shows the Multi Payment API endpoints:Please contact Merchant Support for environment credentials.","file":"MultiPaymentApi_Integration.html"},"MultiPaymentApi_RetrieveMultiPayments":{"title":"Retrieve Multi Payments","parents":["Integration Guides","Multi Payment API"],"label":null,"body":"With the query request function, the merchant can obtain information about the status of a multi payment transaction and the payments within.You can retrieve multi payment transactions via two different ways: either by multi-payment-id or by multi-payment-request-id.","file":"MultiPaymentApi_Integration.html"},"MultiPaymentApi_Workflow":{"title":"Workflow","parents":["Integration Guides","Multi Payment API"],"label":null,"body":"First, the Multi Payment API validates the incoming multi payment request. This validation includesAfter successful validation of a payment request, the Multi Payment API generates individual payment requests based on the multi payment request.The Multi Payment API sends the individual payment request to the respective payment provider.For any unsuccessful payment response, the Multi Payment API rolls back the previously successfully processed payments.The pending payment requests are not submitted.Finally, a multi payment response is built with a collective status and status of the individual payments.This response is then sent to merchant.","file":"MultiPaymentApi_Integration.html"},"MultiPaymentApi_Samples":{"title":"Samples","parents":["Integration Guides","Multi Payment API"],"label":null,"body":"","file":"MultiPaymentApi_Integration.html"},"Appendix":{"title":"API Reference","parents":[],"label":null,"body":"","file":"Appendix.html"},"CarrierBilling_Main":{"title":"Carrier Billing","parents":["Payment Methods"],"label":null,"body":"","file":"CarrierBilling_Main.html"},"CarrierBilling":{"title":"REST API","parents":["Payment Methods","Carrier Billing"],"label":null,"body":"Carrier Billing is a type of Online Bank Transfer.","file":"CarrierBilling_Main.html"},"Reporting_DataReconciliation":{"title":"Data Reconciliation","parents":["Reporting"],"label":null,"body":"The purpose of reconciliation is to compare transaction records and verify that payments have been processed correctly. By reconciling transaction information regularly, merchants will gain a better understanding of their business transaction life cycle - from initial authorization, to settlements, transaction disputes (returns), and refunds.Reconciliation is currently available for the alternative payment methods (i.e. all payment methods but credit card) within Wirecard Payment Gateway: Payment MethodsThe reconciliation files must be downloaded from an SFTP server on the Wirecard Payment Gateway. The download process is described in File Download. Although it is possible to download files manually, we recommend to automate the process for the sake of consistency and convenience. Likewise, it is recommended to run a program to facilitate the reconciliation process of the downloaded files. The program used must be able to handle the CSV file format.To reconcile your transactions, compare the reference transaction ID in the reconciliation file with a transaction ID that is already available in your system. You will be able to see if another transaction has been created updating the current status of your payment. Should you notice inexplicable discrepancies between the reconciled data and your records that you cannot resolve internally, please contact Merchant SupportThe Wirecard Payment Gateway generates transaction reports which are very similar to a typical bank account statement. Merchants are recommended to match and reconcile these report files regularly (daily) with the data recorded in their system. When matching transaction data it is important to remember how the payment total is calculated and also that the data does not represent a complete payment history but only the account activities that have been recorded over the previous 24 hours.The Wirecard Payment Gateway is configured to generate daily transaction reports containing sequential data sets for each of your transaction requests processed by the system. These records are called reconciliation files and are saved in CSV format on the Wirecard SFTP server. When opened and read in a spreadsheet application like Microsoft Excel, the data entries are divided in columns and rows. Opened as plain text in any standard text editor program, however, the field entries are separated by a semicolon (;).The files contain transaction data processed over the previous 24 hours. They do not present a complete payment flow per payment (from authorization, to settlement with possible rejections and disputes) but only those transactions which have been processed by the Wirecard Payment Gateway within the time period for which the report has been created.The reconciliation files are stored on the Wirecard server in the following format:<identifier>_<ip>_<date>_<merchant account id>.csvwhereTransactions processed on the Wirecard Payment Gateway are recorded in a file named EngineAPTransactions.csv. This file encompasses all transaction types for the alternative payments currently available in the Wirecard Payment Gateway processed over the previous 24 hours (currently get-url, check-signature, pending-debit, pending-credit, credit, debit, deposit, credit return, and debit return).The file EngineAPTransactions*.csv currently comprises transfer transaction requests for the alternative payment methods that have been posted or modified by the system over the past 24 hours. If a column does not apply to a payment method, the column will contain NULL. The data is recorded in the following columns/fields:The following is an example of the file layout for the AP Data Reconciliation for Wirecard Payment Gateway, displayed with a spreadsheet application:Here you can download a full compilation of samples of possible values within the reconciliation file also displayed with a spreadsheet application.If any of the transaction types deposit, debit-return or credit-return enters the Wirecard Payment Gateway and cannot be matched to an existing payment, this transaction is created as unmatched transaction. It appears in the reconciliation file without a reference transaction ID.If this unmatched transaction is manually matched to an existing payment on the same day as it has entered the Wirecard Payment Gateway, it appears as a transaction within the payment to which it has been matched. There will be no record of an unmatched payment in the reconciliation file.If, however, this unmatched transaction is manually matched to an existing payment more than a day after it has entered the Wirecard Payment Gateway, it will not appear in the reconciliation file. If it appeared in the reconciliation file, there would be two entries in the reconciliation file for one transaction referring to two different payments, thereby resulting in a duplicate.To be able to connect to the Wirecard SFTP server you must have an SFTP client and an internet connection supporting SSH-2 and the necessary network security policies.Please contact your system administrator to ensure that SFTP traffic is permitted from your machine.In a Windows environment, the reconciliation files can be downloaded using any graphical SFTP application (like WinSCP) or command line SFTP download.To download files with a graphical application, enter the host name sftp.wirecard.com and your username and password. If you do not know your personalized access information, please contact Nerchant Support.You may also use a command line SFTP download from a Unix workstation or MacOS.To connect to your location on the Wirecard host server (sftp.wirecard.com), enter:followed by the password when prompted.When you log on, you are automatically connected by username/customer number/partner number (e.g. C0001 or P0001) to your file repository. In the root window of the remote SFTP server site (Wirecard server) you see the following subdirectories:","file":"Reporting_DataReconciliation.html"},"Reporting":{"title":"Reporting","parents":[],"label":null,"body":"","file":"Reporting.html"},"PaymentMethods":{"title":"Payment Methods","parents":[],"label":null,"body":"","file":"PaymentMethods.html"},"eNets_Main":{"title":"eNets","parents":["Payment Methods"],"label":null,"body":"","file":"eNets_Main.html"},"eNETS":{"title":"Wirecard Payment Page v1","parents":["Payment Methods","eNets"],"label":null,"body":"eNETS Direct Debit is a type of Online Bank Transfer.","file":"eNets_Main.html"},"ApplePay_Main":{"title":"Apple Pay","parents":["Payment Methods"],"label":null,"body":"","file":"ApplePay_Main.html"},"ApplePay":{"title":"REST API","parents":["Payment Methods","Apple Pay"],"label":null,"body":"","file":"ApplePay_Main.html"},"POIPIA_Main":{"title":"POI/PIA","parents":["Payment Methods"],"label":null,"body":"","file":"POIPIA_Main.html"},"API_POIPIA":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","POI/PIA"],"label":null,"body":"POI/PIA is a type of Offline Bank Transfer.","file":"POIPIA_Main.html"},"GeneralPlatformFeatures":{"title":"Features","parents":["Payment Processing"],"label":null,"body":"","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_CrossRef":{"title":"Cross-Referencing","parents":["Payment Processing","Features"],"label":null,"body":"You can cross-reference transactions by:","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_InstrumentCountryBounceback":{"title":"Instrument Country Bounceback","parents":["Payment Processing","Features"],"label":null,"body":"Since 2015 the new VAT rules raised by the EU are applicable for companies established in a EU member state and supply telecommunications, broadcasting and electronic services in the e-commerce business. The company must charge the VAT of the EU country the end consumer belongs to.The bounce back feature can be used by transmitting the a two-digit country code via:<instrument-country></instrument-country>It is available for the following payment methods:The feature was implemented to support digital merchants to handle the new VAT rules raised by the EU in a more efficient way.It can be enabled if a merchant intends to catch this information in the XML response.","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_IPN":{"title":"Instant Payment Notification","parents":["Payment Processing","Features"],"label":null,"body":"The Wirecard Payment Gateway has a built-in notification capability. An Instant Payment Notification (IPN) informs the merchant about the final status of a transaction.There are two types of notifications:The following formats are currently supported:","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_IPP":{"title":"Installment Payment Plan (IPP)","parents":["Payment Processing","Features"],"label":null,"body":"Installment Payment Plan is a feature that allows the consumer to pay in equal installments. Depending on the total order amount, you can offer various payment plans to the consumer. These IPPs differ in tenure and installment payment framework (e.g. interest rate). Set up a contract with your issuing bank to agree on the IPP parameters. The issuing bank then provides Wirecard with these IPP parameters.Installment Payment Plan works with transaction type purchase.A purchase request with IPP requires two additional mandatory fields that identify the installment plan selected by the consumer:Two additional fields are sent in the response to this request:","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_IpValidation":{"title":"IP Validation","parents":["Payment Processing","Features"],"label":null,"body":"A merchant can send his consumer’s IP address via an API request to the Wirecard Payment Gateway.Wirecard Payment Gateway then validates this IP address. This IP validation process can be enabled and disabled in the merchant’s setup.","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_MerchantAccountResolving":{"title":"Merchant Account Resolving","parents":["Payment Processing","Features"],"label":null,"body":"Merchant Account Resolving allows the merchant to create a transaction without a specific Merchant Account ID (MAID) present in time of transaction request. Instead of the MAID, a Super Merchant ID and a Resolver Category Code is sent in the request and a specific MAID used for payment is automatically calculated by the Payment Processor Engine during payment processing. The calculation is based on resolving rules. Resolving rules define the logic for choosing the specific MAID.If the merchant wants to use the Resolver feature he must get in contact with the Merchant Support. The Merchant Support will do all the necessary customizing.","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_RedirectURL":{"title":"Redirect-URL","parents":["Payment Processing","Features"],"label":null,"body":"A payment process needs a redirect-URL. If no redirect-URL is defined at all, the transaction will not be processed.The merchant can send a redirect URL in case of a successful, a cancelled or a failed transaction. Depending on the result of the transaction the consumer will be redirected to the corresponding page of the merchant’s environment.The redirect-URLs can be configured either on MAID level or they can be sent individually with each request.When the merchant configures the redirect-URLs in the MAID, they don’t have to be present in the request. The redirect-URLs are automatically loaded from the MAID configuration.When the merchant determines the redirect-URLs in the request, the request’s redirect-URLs overwrite the MAID configuration for that particular transaction.The merchant can determine up to three different redirect-URLs in one request. In that case the merchant can determine one success-URL, one for failure and one cancellation-URL.","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_ServerAvailability":{"title":"Server Availability","parents":["Payment Processing","Features"],"label":null,"body":"When you want to find out, whether the WPG servers are available, you can use a link to the WPG status page:https://api.wirecard.com/engine/status/The status page shows the general status of the WPG.It also shows the online status of database and tokenization server.For reference you can also see the current server time.Please use a slash \"/\" after \"status\", otherwise this page will ask for credentials.Please be aware that each server request means data traffic. Use this request carefully. Use it only, if you encounter server connection problems.","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_Surcharging":{"title":"Surcharging","parents":["Payment Processing","Features"],"label":null,"body":"Surcharging is a feature for Wirecard Payment Page v1 (HPP and EPP) and REST API. Aimed at merchants who would like to charge additional fees for certain types of payments, this feature guarantees transparency on surcharge rates for consumers.Surcharge rates (given as either a fixed amount or percentage) vary depending on region, card type indicator, card type and payment method.","file":"GeneralPlatformFeatures.html"},"GeneralPlatformFeatures_Transactions":{"title":"Transactions","parents":["Payment Processing","Features"],"label":null,"body":"","file":"GeneralPlatformFeatures.html"},"Masterpass_Main":{"title":"Masterpass","parents":["Payment Methods"],"label":null,"body":"","file":"Masterpass_Main.html"},"API_Masterpass":{"title":"REST API & Wirecard Payment Page v1/v2","parents":["Payment Methods","Masterpass"],"label":null,"body":"Masterpass is a type of Wallet.","file":"Masterpass_Main.html"},"AppendixC":{"title":"Transaction States","parents":["API Reference"],"label":null,"body":"","file":"AppendixC.html"},"Bancontact_Main":{"title":"Bancontact","parents":["Payment Methods"],"label":null,"body":"","file":"Bancontact_Main.html"},"Bancontact":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","Bancontact"],"label":null,"body":"Bancontact is a type of Online Bank Transfer.","file":"Bancontact_Main.html"},"PPv2_Bancontact":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","Bancontact"],"label":null,"body":"","file":"Bancontact_Main.html"},"FraudPrevention_FPS":{"title":"Wirecard Fraud Prevention Suite","parents":["Fraud Prevention"],"label":null,"body":"Fraud is one of the major threats to turnover and revenue for every online merchant. By using fraud prevention methods every merchant is able to participate and benefit from the still growing online market. The Wirecard Fraud Prevention Suite (FPS) helps to identify fraud early in the sales process and to prevent it before it happens. FPS checks every incoming transaction using a complex set of rules. By using this rule set, the merchant will benefit from the experience of other merchants in the market segment incorporated into the rules.","file":"FraudPrevention_FPS.html"},"FraudPrevention_FPS_CreditCardRiskFraud":{"title":"Credit Card Check","parents":["Fraud Prevention","Wirecard Fraud Prevention Suite"],"label":null,"body":"The Wirecard Payment Gateway has a built-in functionality to perform risk check before processing the credit card payment if configured for the certain merchant account. This usually includes fraud check using Wirecard Fraud Prevention Suite (FPS) solution. The result of the risk check can be a rejection/approval of the payment transaction or an FPS case which needs to be resolved manually using the FPS merchant cockpit.There are 2 scenarios in the credit card payment processing where the FPS check is involved.","file":"FraudPrevention_FPS.html"},"iDEAL_Main":{"title":"iDEAL","parents":["Payment Methods"],"label":null,"body":"","file":"iDEAL_Main.html"},"iDEAL":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","iDEAL"],"label":null,"body":"iDEAL is a type of Online Bank Transfer.","file":"iDEAL_Main.html"},"PPv2_ideal":{"title":"Wirecard Payment Page v2","parents":["Payment Methods","iDEAL"],"label":null,"body":"","file":"iDEAL_Main.html"},"TrustPay_Main":{"title":"TrustPay","parents":["Payment Methods"],"label":null,"body":"","file":"TrustPay_Main.html"},"TrustPay":{"title":"REST API & Wirecard Payment Page v1","parents":["Payment Methods","TrustPay"],"label":null,"body":"TrustPay is a type of Online Bank Transfer or Offline Bank Transfer (depending on 3rd party provider/bank).","file":"TrustPay_Main.html"}}